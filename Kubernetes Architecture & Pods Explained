Kubernetes Architecture & Pods Explained :-
Kubernetes is powerful, but understanding its architecture is key! Hereâ€™s a quick breakdown:
Kubernetes Components:
Master Node:
ğŸŸ¢ etcd: Key-value store for cluster data.
ğŸŸ¢ kube-apiserver: The front end for the control plane.
ğŸŸ¢ kube-scheduler: Assigns pods to nodes based on resource availability.
ğŸŸ¢ kube-controller-manager: Manages node health, replication, and more.
Worker Nodes:
ğŸŸ¢ kubelet: Manages pods and container runtime.
ğŸŸ¢ kube-proxy: Manages networking for services.

Understanding Kubernetes Pods vs. Containers:-
ğŸŸ¢What is a Pod? Explanation of how pods are the smallest deployable units in Kubernetes, consisting of one or more tightly coupled containers.
ğŸŸ¢Pod vs. Container: Highlight the differenceâ€”containers run inside pods, not directly managed by Kubernetes.
ğŸŸ¢Multi-Container Pods: Explain the use of sidecar containers, sharing the same network and storage resources.
ğŸŸ¢Use Case: Real-world example of multi-container pod orchestration (e.g., logging, monitoring, or proxying).
